{"version":3,"sources":["logo.svg","Components/Header/index.js","Components/Pages/CodeEditor/index.js","Components/Pages/Homepage/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","href","PureComponent","CodeEditor","html","document","getElementById","css","js","code","contentWindow","body","onkeyup","open","writeln","value","close","textareas","getElementsByTagName","count","length","i","onkeydown","e","keyCode","which","preventDefault","s","this","selectionStart","substring","selectionEnd","className","id","Homepage","App","basename","process","Components_Header","BrowserRouter","Fragment","Route","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19844123.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { PureComponent } from 'react';\n\nclass Header extends PureComponent {\n\n  render() {\n    // const Image = withLink(styled.li`\n    //   color: #fff;\n    //   `);\n\n    return (\n\n      <header>\n        <ul>\n          <li><a href=\"#\">Accueil</a></li>\n        </ul>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { PureComponent } from 'react';\n\nclass CodeEditor extends PureComponent {\n  componentDidMount() {\n    var html = document.getElementById(\"html\");\n    var css = document.getElementById(\"css\");\n    var js = document.getElementById(\"js\");\n    var code = document.getElementById(\"code\").contentWindow.document;\n\n    document.body.onkeyup = function() {\n      code.open();\n      code.writeln(\n        html.value +\n          \"<style>\" +\n          css.value +\n          \"</style>\" +\n          \"<script>\" +\n          js.value +\n          \"</script>\"\n      );\n      code.close();\n    };\n\n    // Use tab to indent in textarea\n    var textareas = document.getElementsByTagName('textarea');\n    var count = textareas.length;\n    for(var i=0;i<count;i++){\n      textareas[i].onkeydown = function(e){\n        if(e.keyCode==9 || e.which==9){\n          e.preventDefault();\n          var s = this.selectionStart;\n          this.value = this.value.substring(0,this.selectionStart) + \"\\t\" + this.value.substring(this.selectionEnd);\n          this.selectionEnd = s+1;\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"editor-interface\">\n          <div className=\"instructions\">\n            <h1>Instructions</h1>\n            <h2>Initialiser les styles par défault des navigateurs</h2>\n            <ul>\n              <li>À l'aide du tag html et body, mettre l'élement \"margin\" et \"padding\" à 0 dans la section CSS afin qu'il n'y ait pas d'espace blanc sur votre page web</li>\n              <li></li>\n            </ul>\n            <h2>Créer une banière \"hero\"</h2>\n            <ul>\n              <li>Créer une balise header dans la section HTML</li>\n              <li></li>\n            </ul>\n          </div>\n          <div className=\"code-inputs\">\n            <div className=\"textarea-code\">\n              <div className=\"textarea-title\">HMTL</div>\n              <textarea id=\"html\"></textarea>\n            </div>\n            <div className=\"textarea-code\">\n              <div className=\"textarea-title\">CSS</div>\n              <textarea id=\"css\"></textarea>\n            </div>\n            <div className=\"textarea-code\">\n              <div className=\"textarea-title\">JavaScript</div>\n              <textarea id=\"js\"></textarea>\n            </div>\n          </div>\n        </div>\n        <div>\n          <iframe id=\"code\"></iframe>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CodeEditor;\n","import React, { PureComponent } from 'react';\n\nclass Homepage extends PureComponent {\n\n\n  render() {\n    return (\n      <div className=\"homepage\">\n        <h1>\n          Bienvenue\n        </h1>\n        <div>\n          Le but de la plate-forme est de permettre aux gens d'apprendre à coder à l'aide d'exercices pratiques. C'est pourquoi nous avons comme objectif de se démarquer en offrant des cours où vous pourrez conserver les projets à des fins personnelles. Ainsi, vous batirez votre propre portfolio tout en apprenant à coder.\n        </div>\n\n        <div className=\"card-course\">\n          <h3>Contruire une landing page</h3>\n          <p>Contruisez votre propre landing page étape par étape</p>\n          <a href=\"#\">Accédez au cours</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Homepage;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Header from './Components/Header/';\n\nimport CodeEditor from './Components/Pages/CodeEditor/';\nimport Homepage from './Components/Pages/Homepage/';\n\nclass App extends Component {\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\" basename={process.env.PUBLIC_URL}>\n        <Header></Header>\n        <BrowserRouter>\n          <React.Fragment>\n            <Route exact path='/' component={Homepage} />\n            <Route path=\"/editor\" component={CodeEditor} />\n          </React.Fragment>\n        </BrowserRouter>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}